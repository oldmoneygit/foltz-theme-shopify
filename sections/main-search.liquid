<!--
  Section: Main Search
  Descrição: Página de resultados de busca com filtros e produtos/páginas/artigos
-->

<style>
  .search-main {
    padding: 40px 0 80px;
    background: #000000;
    min-height: 60vh;
  }

  .search-main__container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 24px;
  }

  .search-main__header {
    margin-bottom: 40px;
  }

  .search-main__title {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-brand-yellow);
    margin-bottom: 16px;
  }

  .search-main__query {
    font-size: 1.125rem;
    color: var(--color-text-subdued);
    margin-bottom: 8px;
  }

  .search-main__query-text {
    color: #FFFFFF;
    font-weight: 600;
  }

  .search-main__count {
    font-size: 0.875rem;
    color: var(--color-text-subdued);
  }

  .search-main__form {
    max-width: 600px;
    margin-bottom: 40px;
  }

  .search-main__input-wrapper {
    position: relative;
  }

  .search-main__input {
    width: 100%;
    padding: 16px 56px 16px 20px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    color: #FFFFFF;
    font-size: 1rem;
    transition: all 0.3s ease;
  }

  .search-main__input:focus {
    outline: none;
    border-color: var(--color-brand-yellow);
    background: rgba(255, 255, 255, 0.08);
  }

  .search-main__input::placeholder {
    color: var(--color-text-subdued);
  }

  .search-main__submit {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--color-brand-yellow);
    border: none;
    border-radius: 8px;
    color: #000000;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .search-main__submit:hover {
    opacity: 0.9;
  }

  .search-main__filters {
    display: flex;
    gap: 12px;
    margin-bottom: 32px;
    flex-wrap: wrap;
  }

  .search-main__filter-btn {
    padding: 10px 20px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    color: #FFFFFF;
    font-size: 0.875rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .search-main__filter-btn:hover,
  .search-main__filter-btn.active {
    background: rgba(218, 241, 13, 0.1);
    border-color: var(--color-brand-yellow);
    color: var(--color-brand-yellow);
  }

  .search-main__results {
    display: flex;
    flex-direction: column;
    gap: 40px;
  }

  .search-main__section {
    display: none;
  }

  .search-main__section.active {
    display: block;
  }

  .search-main__section-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #FFFFFF;
    margin-bottom: 24px;
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .search-main__section-count {
    font-size: 1rem;
    color: var(--color-text-subdued);
    font-weight: 400;
  }

  .search-main__products {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 24px;
  }

  .search-main__pages,
  .search-main__articles {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .search-main__page-item,
  .search-main__article-item {
    padding: 24px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    transition: all 0.3s ease;
  }

  .search-main__page-item:hover,
  .search-main__article-item:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(218, 241, 13, 0.3);
  }

  .search-main__page-title,
  .search-main__article-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #FFFFFF;
    margin-bottom: 12px;
    text-decoration: none;
    display: block;
    transition: color 0.3s ease;
  }

  .search-main__page-title:hover,
  .search-main__article-title:hover {
    color: var(--color-brand-yellow);
  }

  .search-main__page-excerpt,
  .search-main__article-excerpt {
    font-size: 0.875rem;
    color: var(--color-text-subdued);
    line-height: 1.6;
    margin-bottom: 12px;
  }

  .search-main__article-meta {
    display: flex;
    gap: 16px;
    font-size: 0.75rem;
    color: var(--color-text-subdued);
  }

  .search-main__article-date,
  .search-main__article-author {
    display: flex;
    align-items: center;
    gap: 6px;
  }

  .search-main__empty {
    text-align: center;
    padding: 80px 24px;
  }

  .search-main__empty-icon {
    width: 120px;
    height: 120px;
    margin: 0 auto 32px;
    color: var(--color-text-subdued);
    opacity: 0.5;
  }

  .search-main__empty-title {
    font-size: 2rem;
    font-weight: 700;
    color: #FFFFFF;
    margin-bottom: 16px;
  }

  .search-main__empty-text {
    font-size: 1.125rem;
    color: var(--color-text-subdued);
    margin-bottom: 32px;
  }

  .search-main__cta-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 16px 32px;
    background: var(--color-brand-yellow);
    color: #000000;
    font-size: 1rem;
    font-weight: 700;
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.3s ease;
    border: 2px solid var(--color-brand-yellow);
  }

  .search-main__cta-button:hover {
    background: transparent;
    color: var(--color-brand-yellow);
    transform: translateY(-2px);
  }

  /* Loading state for search */
  .search-main__loading {
    display: none;
    text-align: center;
    padding: 60px 24px;
    color: var(--color-text-subdued);
  }

  .search-main__loading.active {
    display: block;
  }

  .search-main__spinner {
    width: 48px;
    height: 48px;
    border: 4px solid rgba(218, 241, 13, 0.2);
    border-top-color: var(--color-brand-yellow);
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    margin: 0 auto 16px;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  /* Highlight search terms in results */
  .search-main mark {
    background: rgba(218, 241, 13, 0.3);
    color: var(--color-brand-yellow);
    padding: 2px 4px;
    border-radius: 4px;
  }

  /* Accessibility: visually hidden class for screen readers */
  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  @media (max-width: 768px) {
    .search-main {
      padding: 20px 0 60px;
    }

    .search-main__container {
      padding: 0 16px;
    }

    .search-main__title {
      font-size: 2rem;
    }

    .search-main__products {
      grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
      gap: 16px;
    }
  }
</style>

<div class="search-main">
  <div class="search-main__container">
    <div class="search-main__header">
      <h1 class="search-main__title">{{ 'search.general.title' | t }}</h1>

      {%- if search.performed -%}
        <p class="search-main__query">
          {{ 'search.general.results_for' | t }}:
          <span class="search-main__query-text">"{{ search.terms }}"</span>
        </p>
        <p class="search-main__count">
          {{ 'search.general.results_count' | t: count: search.results_count }}
        </p>
      {%- endif -%}
    </div>

    <form action="{{ routes.search_url }}" method="get" class="search-main__form" role="search">
      <div class="search-main__input-wrapper">
        <input
          type="search"
          name="q"
          value="{{ search.terms | escape }}"
          placeholder="{{ 'search.general.placeholder' | t }}"
          class="search-main__input"
          required
        >
        <button type="submit" class="search-main__submit" aria-label="{{ 'search.general.submit' | t }}">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
          </svg>
        </button>
      </div>
    </form>

    {%- if search.performed -%}
      {%- if search.results_count > 0 -%}
        {%- liquid
          assign products_count = 0
          assign pages_count = 0
          assign articles_count = 0

          for item in search.results
            case item.object_type
              when 'product'
                assign products_count = products_count | plus: 1
              when 'page'
                assign pages_count = pages_count | plus: 1
              when 'article'
                assign articles_count = articles_count | plus: 1
            endcase
          endfor
        -%}

        <div class="search-main__filters">
          <button class="search-main__filter-btn active" data-filter="all">
            {{ 'search.general.all' | t }} ({{ search.results_count }})
          </button>
          {%- if products_count > 0 -%}
            <button class="search-main__filter-btn" data-filter="products">
              {{ 'search.general.products' | t }} ({{ products_count }})
            </button>
          {%- endif -%}
          {%- if pages_count > 0 -%}
            <button class="search-main__filter-btn" data-filter="pages">
              {{ 'search.general.pages' | t }} ({{ pages_count }})
            </button>
          {%- endif -%}
          {%- if articles_count > 0 -%}
            <button class="search-main__filter-btn" data-filter="articles">
              {{ 'search.general.articles' | t }} ({{ articles_count }})
            </button>
          {%- endif -%}
        </div>

        <div class="search-main__results">
          {%- if products_count > 0 -%}
            <div class="search-main__section active" data-section="products">
              <h2 class="search-main__section-title">
                {{ 'search.general.products' | t }}
                <span class="search-main__section-count">({{ products_count }})</span>
              </h2>
              <div class="search-main__products">
                {%- for item in search.results -%}
                  {%- if item.object_type == 'product' -%}
                    {%- render 'product-card', product: item -%}
                  {%- endif -%}
                {%- endfor -%}
              </div>
            </div>
          {%- endif -%}

          {%- if pages_count > 0 -%}
            <div class="search-main__section" data-section="pages">
              <h2 class="search-main__section-title">
                {{ 'search.general.pages' | t }}
                <span class="search-main__section-count">({{ pages_count }})</span>
              </h2>
              <div class="search-main__pages">
                {%- for item in search.results -%}
                  {%- if item.object_type == 'page' -%}
                    <div class="search-main__page-item">
                      <a href="{{ item.url }}" class="search-main__page-title">
                        {{ item.title }}
                      </a>
                      {%- if item.content != blank -%}
                        <div class="search-main__page-excerpt">
                          {{ item.content | strip_html | truncatewords: 30 }}
                        </div>
                      {%- endif -%}
                    </div>
                  {%- endif -%}
                {%- endfor -%}
              </div>
            </div>
          {%- endif -%}

          {%- if articles_count > 0 -%}
            <div class="search-main__section" data-section="articles">
              <h2 class="search-main__section-title">
                {{ 'search.general.articles' | t }}
                <span class="search-main__section-count">({{ articles_count }})</span>
              </h2>
              <div class="search-main__articles">
                {%- for item in search.results -%}
                  {%- if item.object_type == 'article' -%}
                    <div class="search-main__article-item">
                      <a href="{{ item.url }}" class="search-main__article-title">
                        {{ item.title }}
                      </a>
                      {%- if item.excerpt != blank -%}
                        <div class="search-main__article-excerpt">
                          {{ item.excerpt | strip_html | truncatewords: 30 }}
                        </div>
                      {%- endif -%}
                      <div class="search-main__article-meta">
                        <div class="search-main__article-date">
                          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                            <line x1="16" y1="2" x2="16" y2="6"></line>
                            <line x1="8" y1="2" x2="8" y2="6"></line>
                            <line x1="3" y1="10" x2="21" y2="10"></line>
                          </svg>
                          {{ item.published_at | date: '%B %d, %Y' }}
                        </div>
                        {%- if item.author != blank -%}
                          <div class="search-main__article-author">
                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                              <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                              <circle cx="12" cy="7" r="4"></circle>
                            </svg>
                            {{ item.author }}
                          </div>
                        {%- endif -%}
                      </div>
                    </div>
                  {%- endif -%}
                {%- endfor -%}
              </div>
            </div>
          {%- endif -%}
        </div>
      {%- else -%}
        <div class="search-main__empty">
          <svg class="search-main__empty-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
            <circle cx="11" cy="11" r="8"></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            <path d="M8 11h6" stroke-width="2"></path>
          </svg>

          <h2 class="search-main__empty-title">{{ 'search.general.no_results_title' | t }}</h2>
          <p class="search-main__empty-text">{{ 'search.general.no_results_message' | t }}</p>

          <a href="{{ routes.all_products_collection_url }}" class="search-main__cta-button">
            {{ 'search.general.view_all' | t }}
          </a>
        </div>
      {%- endif -%}
    {%- else -%}
      <div class="search-main__empty">
        <svg class="search-main__empty-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
          <circle cx="11" cy="11" r="8"></circle>
          <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
        </svg>

        <h2 class="search-main__empty-title">{{ 'search.general.search_title' | t }}</h2>
        <p class="search-main__empty-text">{{ 'search.general.search_message' | t }}</p>
      </div>
    {%- endif -%}
  </div>
</div>

<script>
  (function() {
    // Filter functionality
    const filterButtons = document.querySelectorAll('[data-filter]');
    const sections = document.querySelectorAll('[data-section]');

    if (filterButtons.length > 0 && sections.length > 0) {
      filterButtons.forEach(btn => {
        btn.addEventListener('click', () => {
          const filter = btn.dataset.filter;

          // Update active button
          filterButtons.forEach(b => b.classList.remove('active'));
          btn.classList.add('active');

          // Show/hide sections with animation
          sections.forEach(section => {
            if (filter === 'all') {
              section.classList.add('active');
            } else {
              if (section.dataset.section === filter) {
                section.classList.add('active');
              } else {
                section.classList.remove('active');
              }
            }
          });

          // Scroll to results smoothly
          if (filter !== 'all') {
            const activeSection = document.querySelector(`[data-section="${filter}"]`);
            if (activeSection) {
              activeSection.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            }
          }
        });
      });
    }

    // Auto-focus search input on page load (only if no search was performed)
    const searchInput = document.querySelector('.search-main__input');
    const searchPerformed = {{ search.performed | json }};

    if (searchInput && !searchPerformed) {
      // Small delay to ensure smooth loading
      setTimeout(() => {
        searchInput.focus();
      }, 300);
    }

    // Add keyboard shortcut (Ctrl/Cmd + K) to focus search
    document.addEventListener('keydown', (e) => {
      if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
        e.preventDefault();
        if (searchInput) {
          searchInput.focus();
          searchInput.select();
        }
      }
    });

    // Clear button for search input
    if (searchInput && searchInput.value) {
      const inputWrapper = searchInput.closest('.search-main__input-wrapper');
      const submitButton = inputWrapper.querySelector('.search-main__submit');

      // Create clear button
      const clearButton = document.createElement('button');
      clearButton.type = 'button';
      clearButton.className = 'search-main__clear';
      clearButton.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>';
      clearButton.setAttribute('aria-label', 'Limpiar búsqueda');

      // Add styles for clear button
      clearButton.style.cssText = `
        position: absolute;
        right: 60px;
        top: 50%;
        transform: translateY(-50%);
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border: none;
        color: var(--color-text-subdued);
        cursor: pointer;
        transition: color 0.3s ease;
      `;

      inputWrapper.insertBefore(clearButton, submitButton);

      clearButton.addEventListener('click', () => {
        searchInput.value = '';
        searchInput.focus();
        clearButton.style.display = 'none';
      });

      clearButton.addEventListener('mouseenter', () => {
        clearButton.style.color = 'var(--color-brand-yellow)';
      });

      clearButton.addEventListener('mouseleave', () => {
        clearButton.style.color = 'var(--color-text-subdued)';
      });

      // Show/hide clear button based on input value
      searchInput.addEventListener('input', () => {
        clearButton.style.display = searchInput.value ? 'flex' : 'none';
      });
    }

    // Announce results count to screen readers
    const resultsCount = {{ search.results_count | json }};
    if (searchPerformed && resultsCount !== null) {
      const announcement = document.createElement('div');
      announcement.setAttribute('role', 'status');
      announcement.setAttribute('aria-live', 'polite');
      announcement.className = 'visually-hidden';
      announcement.textContent = `{{ 'search.general.results_count' | t: count: search.results_count }}`;
      document.body.appendChild(announcement);
    }
  })();
</script>

{% schema %}
{
  "name": "Search Results",
  "settings": []
}
{% endschema %}
