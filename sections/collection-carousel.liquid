{% comment %}
  Collection Carousel Section
  Displays products from a specific collection in a horizontal carousel
{% endcomment %}

{%- liquid
  assign collection = collections[section.settings.collection]
  assign products_to_show = section.settings.products_to_show | default: 8
  assign show_section = section.settings.show_section | default: true
  assign featured_image = section.settings.featured_image
-%}

{%- if show_section and collection and collection.products.size > 0 -%}
<section class="collection-carousel" data-section-id="{{ section.id }}">
  {%- if section.settings.enable_background_effects -%}
    <div class="collection-carousel__bg-decoration"></div>
  {%- endif -%}

  <div class="collection-carousel__container {% if featured_image %}collection-carousel__container--with-image{% endif %}">
    {%- if featured_image -%}
      {%- comment %} Featured Image - Left Side {%- endcomment -%}
      <div class="collection-carousel__featured-image">
        <img
          src="{{ featured_image | image_url: width: 1000 }}"
          alt="{{ section.settings.title }}"
          loading="lazy"
          class="collection-carousel__image"
        >
        <div class="collection-carousel__image-overlay"></div>
      </div>
    {%- endif -%}

    {%- comment %} Content Area - Right Side {%- endcomment -%}
    <div class="collection-carousel__content">
      {%- comment %} Section Header - Only show when there's NO featured image {%- endcomment -%}
      {%- unless featured_image -%}
        <div class="collection-carousel__header">
          {%- if section.settings.emoji != blank -%}
            <div class="collection-carousel__emoji">{{ section.settings.emoji }}</div>
          {%- endif -%}

          <h2 class="collection-carousel__title">
            {{ section.settings.title | default: collection.title }}
          </h2>

          {%- if section.settings.subtitle != blank -%}
            <p class="collection-carousel__subtitle">{{ section.settings.subtitle }}</p>
          {%- endif -%}
        </div>
      {%- endunless -%}

      {%- comment %} Carousel {%- endcomment -%}
      <div class="collection-carousel__wrapper">
      <div class="collection-carousel__track" data-carousel-track>
        {%- for product in collection.products limit: products_to_show -%}
          <div class="collection-carousel__slide">
            <a href="{{ product.url }}" class="product-card">
              {%- comment %} Product Image {%- endcomment -%}
              <div class="product-card__image-wrapper">
                {%- if product.featured_image -%}
                  <img
                    src="{{ product.featured_image | image_url: width: 600 }}"
                    alt="{{ product.featured_image.alt | escape }}"
                    class="product-card__image"
                    loading="lazy"
                    width="600"
                    height="600"
                  >
                {%- else -%}
                  <div class="product-card__image-placeholder"></div>
                {%- endif -%}

                {%- comment %} Hover Overlay {%- endcomment -%}
                <div class="product-card__overlay"></div>
              </div>

              {%- comment %} Product Info {%- endcomment -%}
              <div class="product-card__info">
                <h3 class="product-card__title">{{ product.title }}</h3>
                <div class="product-card__price">
                  {%- comment %} Calcular compare_at_price como 50% a mais (preço * 1.5) {%- endcomment -%}
                  {%- assign calculated_compare_price = product.price | times: 1.5 | round -%}
                  <span class="product-card__price--sale">{{ product.price | money }}</span>
                  <span class="product-card__price--compare">{{ calculated_compare_price | money }}</span>
                </div>
              </div>
            </a>
          </div>
        {%- endfor -%}
      </div>

      {%- comment %} Navigation Buttons {%- endcomment -%}
      <button class="collection-carousel__nav collection-carousel__nav--prev" data-carousel-prev aria-label="Previous">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3">
          <polyline points="15 18 9 12 15 6"></polyline>
        </svg>
      </button>
      <button class="collection-carousel__nav collection-carousel__nav--next" data-carousel-next aria-label="Next">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </button>
    </div>

      {%- comment %} View All Button {%- endcomment -%}
      {%- if section.settings.show_view_all -%}
        <div class="collection-carousel__cta">
          <a href="{{ collection.url }}" class="collection-carousel__button">
            Ver toda la colección
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="5" y1="12" x2="19" y2="12"></line>
              <polyline points="12 5 19 12 12 19"></polyline>
            </svg>
          </a>
        </div>
      {%- endif -%}
    </div>
  </div>
</section>

<style>
/* Collection Carousel Section */
.collection-carousel {
  position: relative;
  padding: 3rem 0;
  background: linear-gradient(180deg, #000 0%, #0a0a0a 50%, #000 100%);
  overflow: hidden;
}

@media (min-width: 768px) {
  .collection-carousel {
    padding: 5rem 0;
  }
}

.collection-carousel__bg-decoration {
  position: absolute;
  inset: 0;
  background: radial-gradient(ellipse at center, rgba(24, 24, 27, 0.1) 0%, transparent 70%);
  pointer-events: none;
}

.collection-carousel__container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 1rem;
  position: relative;
  z-index: 10;
}

@media (min-width: 768px) {
  .collection-carousel__container {
    padding: 0 1.5rem;
  }
}

/* Layout com Imagem - Side by Side */
.collection-carousel__container--with-image {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  align-items: stretch;
}

@media (min-width: 768px) {
  .collection-carousel__container--with-image {
    gap: 2rem;
  }
}

@media (min-width: 1024px) {
  .collection-carousel__container--with-image {
    flex-direction: row;
    gap: 2rem;
    align-items: flex-start;
  }
}

@media (min-width: 1280px) {
  .collection-carousel__container--with-image {
    gap: 3rem;
  }
}

/* Featured Image - Left Side - Adaptive Layout */
.collection-carousel__featured-image {
  position: relative;
  flex: 0 0 auto;
  width: 100%;
  border-radius: 1rem;
  overflow: hidden;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
  background: linear-gradient(135deg, #18181b 0%, #27272a 100%);
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (min-width: 768px) {
  .collection-carousel__featured-image {
    border-radius: 1.25rem;
  }
}

@media (min-width: 1024px) {
  .collection-carousel__featured-image {
    width: 42%;
    flex-shrink: 0;
    border-radius: 1.5rem;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  }
}

@media (min-width: 1440px) {
  .collection-carousel__featured-image {
    width: 38%;
  }
}

/* Imagem adaptativa - mostra completamente sem cortes */
.collection-carousel__image {
  position: relative;
  width: 100%;
  height: auto;
  display: block;
  object-fit: contain;
  transition: transform 0.5s ease;
}

.collection-carousel__featured-image:hover .collection-carousel__image {
  transform: scale(1.03);
}

.collection-carousel__image-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, transparent 0%, rgba(0, 0, 0, 0.5) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.collection-carousel__featured-image:hover .collection-carousel__image-overlay {
  opacity: 0.3;
}

/* Content Area - Right Side */
.collection-carousel__content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  position: relative;
  min-width: 0; /* Importante para prevenir overflow */
}

@media (min-width: 768px) {
  .collection-carousel__content {
    gap: 2rem;
  }
}

/* Efeito visual hierárquico quando tem imagem */
.collection-carousel__container--with-image .collection-carousel__content {
  background: transparent;
  border-radius: 0;
  padding: 0;
  border: none;
}

@media (min-width: 1024px) {
  .collection-carousel__container--with-image .collection-carousel__content {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.04) 0%, rgba(255, 255, 255, 0.01) 100%);
    border-radius: 1.5rem;
    padding: 2.5rem 2rem;
    border: 1px solid rgba(255, 255, 255, 0.06);
    backdrop-filter: blur(12px);
    margin-left: -2rem;
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.35);
  }
}

@media (min-width: 1280px) {
  .collection-carousel__container--with-image .collection-carousel__content {
    padding: 3rem 2.5rem;
    margin-left: -3rem;
  }
}

@media (min-width: 1440px) {
  .collection-carousel__container--with-image .collection-carousel__content {
    padding: 3.5rem 3rem;
  }
}

/* Header dentro do Content */
.collection-carousel__header {
  text-align: left;
  margin-bottom: 0;
}

@media (max-width: 1023px) {
  .collection-carousel__header {
    text-align: center;
  }
}

.collection-carousel__emoji {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  display: inline-block;
}

@media (min-width: 768px) {
  .collection-carousel__emoji {
    font-size: 3rem;
  }
}

.collection-carousel__title {
  font-size: 1.875rem;
  font-weight: 900;
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 0.75rem;
  letter-spacing: 0.05em;
}

@media (min-width: 768px) {
  .collection-carousel__title {
    font-size: 3rem;
  }
}

.collection-carousel__subtitle {
  color: #9ca3af;
  font-size: 0.875rem;
  max-width: 42rem;
}

@media (max-width: 1023px) {
  .collection-carousel__subtitle {
    margin: 0 auto;
  }
}

@media (min-width: 768px) {
  .collection-carousel__subtitle {
    font-size: 1rem;
  }
}

/* Carousel Wrapper */
.collection-carousel__wrapper {
  position: relative;
}

.collection-carousel__track {
  display: flex;
  gap: 1rem;
  overflow-x: auto;
  scroll-behavior: smooth;
  scrollbar-width: none;
  -ms-overflow-style: none;
  padding: 1rem 0;
  cursor: grab;
  -webkit-overflow-scrolling: touch;
  scroll-snap-type: x mandatory;
  will-change: scroll-position;
  scroll-padding: 0 1rem;
}

.collection-carousel__track::-webkit-scrollbar {
  display: none;
}

.collection-carousel__track.is-dragging {
  cursor: grabbing;
  scroll-behavior: auto;
  scroll-snap-type: x mandatory;
  user-select: none;
  -webkit-user-select: none;
}

.collection-carousel__track.is-dragging * {
  pointer-events: none;
}

@media (min-width: 768px) {
  .collection-carousel__track {
    gap: 1.5rem;
  }
}

.collection-carousel__slide {
  flex: 0 0 85%;
  min-width: 0;
  scroll-snap-align: start;
  scroll-snap-stop: always;
}

@media (min-width: 480px) {
  .collection-carousel__slide {
    flex: 0 0 70%;
  }
}

@media (min-width: 640px) {
  .collection-carousel__slide {
    flex: 0 0 calc(50% - 0.5rem);
  }
}

@media (min-width: 768px) {
  .collection-carousel__slide {
    flex: 0 0 calc(50% - 0.75rem);
  }
}

@media (min-width: 1024px) {
  .collection-carousel__slide {
    flex: 0 0 calc(33.333% - 1rem);
  }
}

/* Ajuste quando tem imagem - produtos menores no desktop */
.collection-carousel__container--with-image .collection-carousel__slide {
  flex: 0 0 85%;
}

@media (min-width: 480px) {
  .collection-carousel__container--with-image .collection-carousel__slide {
    flex: 0 0 70%;
  }
}

@media (min-width: 640px) {
  .collection-carousel__container--with-image .collection-carousel__slide {
    flex: 0 0 calc(50% - 0.5rem);
  }
}

@media (min-width: 768px) {
  .collection-carousel__container--with-image .collection-carousel__slide {
    flex: 0 0 calc(50% - 0.75rem);
  }
}

@media (min-width: 1024px) {
  .collection-carousel__container--with-image .collection-carousel__slide {
    flex: 0 0 calc(50% - 0.75rem);
  }
}

@media (min-width: 1280px) {
  .collection-carousel__slide {
    flex: 0 0 calc(25% - 1.125rem);
  }

  .collection-carousel__container--with-image .collection-carousel__slide {
    flex: 0 0 calc(33.333% - 1rem);
  }
}

@media (min-width: 1440px) {
  .collection-carousel__container--with-image .collection-carousel__slide {
    flex: 0 0 calc(33.333% - 1rem);
  }
}

/* Product Card */
.product-card {
  display: block;
  border-radius: 1rem;
  overflow: hidden;
  background: #18181b;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  text-decoration: none;
  color: inherit;
}

.product-card:hover {
  transform: translateY(-8px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4), 0 0 0 1px rgba(212, 255, 0, 0.3);
}

.product-card__image-wrapper {
  position: relative;
  aspect-ratio: 1 / 1;
  overflow: hidden;
  background: #27272a;
}

/* Aspect ratio mais vertical quando há imagem featured */
.collection-carousel__container--with-image .product-card__image-wrapper {
  aspect-ratio: 3 / 4;
}

@media (min-width: 768px) {
  .collection-carousel__container--with-image .product-card__image-wrapper {
    aspect-ratio: 2.5 / 3.5;
  }
}

@media (min-width: 1024px) {
  .collection-carousel__container--with-image .product-card__image-wrapper {
    aspect-ratio: 3 / 4;
  }
}

.product-card__image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.product-card:hover .product-card__image {
  transform: scale(1.1);
}

.product-card__image-placeholder {
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #27272a, #3f3f46);
}

.product-card__overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg, transparent 60%, rgba(0, 0, 0, 0.8) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.product-card:hover .product-card__overlay {
  opacity: 1;
}

.product-card__info {
  padding: 0.875rem 1rem 1rem;
}

@media (min-width: 768px) {
  .product-card__info {
    padding: 1rem 1.25rem 1.25rem;
  }
}

@media (min-width: 1024px) {
  .product-card__info {
    padding: 1rem 1.3125rem 1.25rem;
  }
}

.product-card__title {
  font-size: 0.8125rem;
  font-weight: 600;
  color: #fff;
  margin-bottom: 0.625rem;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  line-height: 1.3;
  min-height: 1.05rem;
}

@media (min-width: 768px) {
  .product-card__title {
    font-size: 0.9375rem;
    margin-bottom: 0.75rem;
    min-height: 1.2rem;
  }
}

.product-card__price {
  display: flex;
  align-items: baseline;
  gap: 0.375rem;
  flex-wrap: nowrap;
  overflow: hidden;
}

.product-card__price--regular {
  font-size: 0.875rem;
  font-weight: 700;
  color: #D4FF00;
  line-height: 1.2;
  white-space: nowrap;
}

@media (min-width: 768px) {
  .product-card__price--regular {
    font-size: 0.9375rem;
  }
}

@media (min-width: 1024px) {
  .product-card__price--regular {
    font-size: 1rem;
  }
}

.product-card__price--sale {
  font-size: 0.875rem;
  font-weight: 700;
  color: #D4FF00;
  line-height: 1.2;
  white-space: nowrap;
}

@media (min-width: 768px) {
  .product-card__price--sale {
    font-size: 0.9375rem;
  }
}

@media (min-width: 1024px) {
  .product-card__price--sale {
    font-size: 1rem;
  }
}

.product-card__price--compare {
  font-size: 0.6875rem;
  color: #71717a;
  text-decoration: line-through;
  line-height: 1.2;
  flex-shrink: 0;
  white-space: nowrap;
}

@media (min-width: 768px) {
  .product-card__price--compare {
    font-size: 0.75rem;
  }
}

@media (min-width: 1024px) {
  .product-card__price--compare {
    font-size: 0.8125rem;
  }
}

/* Navigation Buttons - Visíveis em mobile e desktop */
.collection-carousel__nav {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 20;
  background: rgba(0, 0, 0, 0.9);
  border: 2px solid rgba(212, 255, 0, 0.3);
  color: #D4FF00;
  padding: 0.625rem;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5), 0 0 0 0 rgba(212, 255, 0, 0);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  width: 44px;
  height: 44px;
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

.collection-carousel__nav svg {
  width: 20px;
  height: 20px;
  stroke-width: 2.5;
}

@media (min-width: 768px) {
  .collection-carousel__nav {
    padding: 0.875rem;
    width: 56px;
    height: 56px;
    border-width: 2px;
  }

  .collection-carousel__nav svg {
    width: 26px;
    height: 26px;
    stroke-width: 3;
  }
}

.collection-carousel__nav:hover {
  background: #D4FF00;
  border-color: #D4FF00;
  color: #000;
  transform: translateY(-50%) scale(1.1);
  box-shadow: 0 8px 30px rgba(212, 255, 0, 0.5), 0 0 20px rgba(212, 255, 0, 0.3);
}

.collection-carousel__nav:active {
  transform: translateY(-50%) scale(0.95);
  box-shadow: 0 4px 15px rgba(212, 255, 0, 0.6);
}

.collection-carousel__nav--prev {
  left: 0.5rem;
}

.collection-carousel__nav--next {
  right: 0.5rem;
}

@media (min-width: 768px) {
  .collection-carousel__nav--prev {
    left: -1.25rem;
  }

  .collection-carousel__nav--next {
    right: -1.25rem;
  }
}

/* View All Button */
.collection-carousel__cta {
  text-align: center;
  margin-top: 2.5rem;
}

@media (min-width: 768px) {
  .collection-carousel__cta {
    margin-top: 3rem;
  }
}

.collection-carousel__button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 2rem;
  background: transparent;
  border: 2px solid #D4FF00;
  color: #D4FF00;
  font-weight: 700;
  font-size: 0.875rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  text-decoration: none;
}

@media (min-width: 768px) {
  .collection-carousel__button {
    font-size: 1rem;
  }
}

.collection-carousel__button:hover {
  background: #D4FF00;
  color: #000;
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(212, 255, 0, 0.3);
}
</style>

<script>
// Ultra-Smooth Carousel with Enhanced Swipe/Drag Support
document.addEventListener('DOMContentLoaded', function() {
  const carousels = document.querySelectorAll('[data-carousel-track]');

  carousels.forEach(track => {
    const prevBtn = track.parentElement.querySelector('[data-carousel-prev]');
    const nextBtn = track.parentElement.querySelector('[data-carousel-next]');

    // Detect iOS for optimal handling
    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;

    // Calculate optimal scroll distance based on viewport
    const getScrollDistance = () => {
      const slideWidth = track.querySelector('.collection-carousel__slide')?.offsetWidth || 300;
      const gap = 16; // gap in pixels
      return slideWidth + gap;
    };

    // Smooth button navigation
    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        track.scrollBy({
          left: -getScrollDistance(),
          behavior: 'smooth'
        });
      });
    }

    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        track.scrollBy({
          left: getScrollDistance(),
          behavior: 'smooth'
        });
      });
    }

    // Enhanced Swipe/Drag functionality
    let isDown = false;
    let startX;
    let scrollLeft;
    let velocity = 0;
    let lastX = 0;
    let lastTime = Date.now();
    let animationFrame = null;

    // Easing function for momentum
    const easeOutQuint = (t) => 1 + (--t) * t * t * t * t;

    // Apply momentum with smooth easing - Optimized for snap points
    const applyMomentum = () => {
      if (Math.abs(velocity) < 0.1) {
        velocity = 0;
        animationFrame = null;
        return;
      }

      // Higher friction for faster stops (works better with scroll-snap)
      const friction = isIOS ? 0.88 : 0.90;
      velocity *= friction;

      // Apply scroll
      track.scrollLeft -= velocity * 20;

      // Continue animation
      animationFrame = requestAnimationFrame(applyMomentum);
    };

    // Mouse events (Desktop)
    track.addEventListener('mousedown', (e) => {
      // Cancel any ongoing momentum
      if (animationFrame) {
        cancelAnimationFrame(animationFrame);
        animationFrame = null;
      }

      isDown = true;
      track.classList.add('is-dragging');
      startX = e.pageX - track.offsetLeft;
      scrollLeft = track.scrollLeft;
      velocity = 0;
      lastX = e.pageX;
      lastTime = Date.now();

      e.preventDefault();
    });

    track.addEventListener('mouseleave', () => {
      if (isDown) {
        isDown = false;
        track.classList.remove('is-dragging');

        // Apply momentum on mouse leave
        if (Math.abs(velocity) > 0.3) {
          applyMomentum();
        }
      }
    });

    track.addEventListener('mouseup', () => {
      if (isDown) {
        isDown = false;
        track.classList.remove('is-dragging');

        // Apply momentum scrolling with enhanced physics
        if (Math.abs(velocity) > 0.3) {
          applyMomentum();
        }
      }
    });

    track.addEventListener('mousemove', (e) => {
      if (!isDown) return;
      e.preventDefault();

      const x = e.pageX - track.offsetLeft;
      const walk = (x - startX) * 2.2; // Increased multiplier for better fluidity
      track.scrollLeft = scrollLeft - walk;

      // Calculate velocity for momentum with smoother sampling
      const now = Date.now();
      const dt = Math.max(now - lastTime, 1);
      const dx = e.pageX - lastX;

      // Smooth velocity calculation
      const newVelocity = dx / dt;
      velocity = velocity * 0.6 + newVelocity * 0.4; // Weighted average for smoothness

      lastX = e.pageX;
      lastTime = now;
    });

    // Touch events (Mobile) - Optimized for iPhone responsiveness
    let touchStartX = 0;
    let touchScrollLeft = 0;
    let touchVelocities = [];
    let isDragging = false;

    track.addEventListener('touchstart', (e) => {
      // Cancel any ongoing momentum
      if (animationFrame) {
        cancelAnimationFrame(animationFrame);
        animationFrame = null;
      }

      touchStartX = e.touches[0].pageX;
      touchScrollLeft = track.scrollLeft;
      velocity = 0;
      touchVelocities = [];
      lastX = e.touches[0].pageX;
      lastTime = Date.now();
      isDragging = false;

      track.classList.add('is-dragging');
    }, { passive: true });

    track.addEventListener('touchmove', (e) => {
      const x = e.touches[0].pageX;
      const walk = (touchStartX - x) * (isIOS ? 2.2 : 1.8); // Higher multiplier for iOS

      // Mark as dragging if moved more than 5px
      if (Math.abs(walk) > 5) {
        isDragging = true;
      }

      track.scrollLeft = touchScrollLeft + walk;

      // Simplified velocity calculation for faster response
      const now = Date.now();
      const dt = Math.max(now - lastTime, 1);
      const dx = x - lastX;

      const currentVelocity = dx / dt;
      touchVelocities.push(currentVelocity);

      // Keep only last 3 samples for faster response (reduced from 5)
      if (touchVelocities.length > 3) {
        touchVelocities.shift();
      }

      // Direct velocity calculation - less smoothing for faster response
      velocity = touchVelocities.reduce((a, b) => a + b, 0) / touchVelocities.length;

      lastX = x;
      lastTime = now;
    }, { passive: true });

    track.addEventListener('touchend', () => {
      track.classList.remove('is-dragging');

      // On iOS, rely more on native scroll-snap, use lighter momentum
      const momentumThreshold = isIOS ? 0.3 : 0.2;

      if (isDragging && Math.abs(velocity) > momentumThreshold) {
        velocity *= -1; // Invert for touch

        // On iOS, apply less aggressive momentum to work with scroll-snap
        if (isIOS) {
          velocity *= 0.7;
        }

        applyMomentum();
      }

      isDragging = false;
    }, { passive: true });

    // Prevent default drag behavior on images and links
    track.querySelectorAll('img, a').forEach(elem => {
      elem.addEventListener('dragstart', (e) => e.preventDefault());

      // Prevent click when dragging
      elem.addEventListener('click', (e) => {
        if (track.classList.contains('is-dragging')) {
          e.preventDefault();
        }
      });
    });

    // Update button states based on scroll position
    const updateButtonStates = () => {
      if (prevBtn && nextBtn) {
        const isAtStart = track.scrollLeft <= 10;
        const isAtEnd = track.scrollLeft >= track.scrollWidth - track.clientWidth - 10;

        prevBtn.style.opacity = isAtStart ? '0.3' : '1';
        nextBtn.style.opacity = isAtEnd ? '0.3' : '1';
        prevBtn.style.pointerEvents = isAtStart ? 'none' : 'auto';
        nextBtn.style.pointerEvents = isAtEnd ? 'none' : 'auto';
      }
    };

    // Initial button state
    updateButtonStates();

    // Update on scroll
    track.addEventListener('scroll', updateButtonStates);
  });
});
</script>
{%- endif -%}

{% schema %}
{
  "name": "Collection Carousel",
  "tag": "section",
  "class": "section-collection-carousel",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_section",
      "label": "Show section",
      "default": true
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "featured_image",
      "label": "Featured Image (Optional)",
      "info": "Add a visual image to display alongside the carousel"
    },
    {
      "type": "text",
      "id": "emoji",
      "label": "Emoji",
      "default": "⚽"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Featured Collection"
    },
    {
      "type": "textarea",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Discover our latest products"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "Products to show",
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "label": "Show 'View All' button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_background_effects",
      "label": "Enable background effects",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Collection Carousel"
    }
  ]
}
{% endschema %}
