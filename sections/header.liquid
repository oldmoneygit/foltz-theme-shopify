{%- comment -%}
  HEADER SECTION
  Replicates: src/components/Header.jsx from Next.js project
{%- endcomment -%}

<!-- Promotional Banner -->
<div class="promotional-banner">
  {{ section.settings.promotional_text }}
</div>

<!-- Main Header -->
<header class="header" id="header">
  <div class="container">
    <!-- Top Bar: Logo, Search, Icons -->
    <div class="header-top">
      <!-- Mobile Menu Toggle (visible only on mobile) -->
      <button class="mobile-menu-toggle lg:hidden" id="mobile-menu-toggle" aria-label="Toggle Menu">
        {% render 'icon-menu', size: 24 %}
      </button>

      <!-- Logo -->
      <a href="/" class="header-logo">
        {%- if section.settings.logo -%}
          <img src="{{ section.settings.logo | img_url: '320x96' }}" alt="{{ shop.name }}" loading="eager">
        {%- else -%}
          <img src="{{ 'logo-white.png' | asset_url }}" alt="{{ shop.name }}" loading="eager">
        {%- endif -%}
      </a>

      <!-- Search Bar (desktop only) -->
      <div class="header-search" id="header-search-wrapper">
        <form action="/search" method="get" id="header-search-form">
          <input
            type="text"
            name="q"
            placeholder="{{ 'general.search.placeholder' | t }}"
            autocomplete="off"
            id="header-search-input"
            aria-label="Buscar productos"
            aria-autocomplete="list"
            aria-controls="search-results-dropdown"
            aria-expanded="false"
          >
          <button type="submit" aria-label="{{ 'general.search.submit' | t }}">
            {% render 'icon-search', size: 20 %}
          </button>
        </form>

        <!-- Live Search Dropdown -->
        <div class="search-results-dropdown" id="search-results-dropdown" role="listbox" aria-label="Resultados de búsqueda">
          <div class="search-results-loading" id="search-loading">
            <div class="search-spinner"></div>
            <span>Buscando...</span>
          </div>

          <div class="search-results-content" id="search-results-content">
            <!-- Products will be inserted here -->
          </div>

          <div class="search-results-empty" id="search-empty" style="display: none;">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
              <circle cx="11" cy="11" r="8"></circle>
              <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
              <path d="M8 11h6"></path>
            </svg>
            <p>No se encontraron productos</p>
          </div>

          <div class="search-results-footer" id="search-footer" style="display: none;">
            <a href="#" class="search-view-all" id="search-view-all">
              Ver todos los resultados
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="5" y1="12" x2="19" y2="12"></line>
                <polyline points="12 5 19 12 12 19"></polyline>
              </svg>
            </a>
          </div>
        </div>
      </div>

      <!-- Actions: Search (mobile), Wishlist & Cart -->
      <div class="header-actions">
        <!-- Mobile Search Toggle -->
        <button class="header-icon mobile-search-toggle" id="mobile-search-toggle" aria-label="Buscar">
          {% render 'icon-search', size: 24 %}
        </button>

        <!-- Wishlist Icon -->
        <a href="/pages/favoritos" class="header-icon" aria-label="Favoritos">
          {% render 'icon-heart', size: 24 %}
          <span class="header-icon-badge" style="display: none;">0</span>
        </a>

        <!-- Cart Icon -->
        <a href="/cart" class="header-icon" aria-label="Shopping Cart">
          {% render 'icon-cart', size: 24 %}
          {%- if cart.item_count > 0 -%}
            <span class="header-icon-badge">{{ cart.item_count }}</span>
          {%- endif -%}
        </a>
      </div>
    </div>

    <!-- Navigation Menu (desktop only) -->
    <nav class="header-nav">
      <ul>
        {%- for link in section.settings.menu.links -%}
          {%- if link.links != blank -%}
            <!-- Menu item with submenu -->
            <li class="header-nav-item-dropdown">
              <button class="header-nav-dropdown-toggle">
                {{ link.title }}
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <polyline points="6 9 12 15 18 9"></polyline>
                </svg>
              </button>
              <div class="header-nav-dropdown">
                {%- for child_link in link.links -%}
                  <a href="{{ child_link.url }}">{{ child_link.title }}</a>
                {%- endfor -%}
              </div>
            </li>
          {%- else -%}
            <!-- Regular menu item -->
            <li>
              <a href="{{ link.url }}">{{ link.title }}</a>
            </li>
          {%- endif -%}
        {%- endfor -%}
      </ul>
    </nav>
  </div>
</header>

<!-- Mobile Menu Backdrop -->
<div class="mobile-menu-backdrop" id="mobile-menu-backdrop"></div>

<!-- Mobile Menu -->
<div class="mobile-menu" id="mobile-menu">
  <div class="mobile-menu-header">
    <span class="mobile-menu-title">Menu</span>
    <button class="mobile-menu-close" id="mobile-menu-close" aria-label="Close Menu">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  </div>

  <div class="mobile-menu-content">
    <!-- Mobile Menu Items -->
    <ul class="mobile-menu-list">
      {%- for link in section.settings.menu.links -%}
        {%- if link.links != blank -%}
          <!-- Menu item with submenu -->
          <li class="mobile-menu-item-dropdown">
            <button class="mobile-menu-dropdown-toggle">
              {{ link.title }}
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="6 9 12 15 18 9"></polyline>
              </svg>
            </button>
            <ul class="mobile-menu-submenu">
              {%- for child_link in link.links -%}
                <li>
                  <a href="{{ child_link.url }}">{{ child_link.title }}</a>
                </li>
              {%- endfor -%}
            </ul>
          </li>
        {%- else -%}
          <!-- Regular menu item -->
          <li>
            <a href="{{ link.url }}">{{ link.title }}</a>
          </li>
        {%- endif -%}
      {%- endfor -%}
    </ul>

    <!-- Mobile Search -->
    <div class="mobile-menu-search">
      <form action="/search" method="get">
        <input
          type="text"
          name="q"
          placeholder="{{ 'general.search.placeholder' | t }}"
          autocomplete="off"
        >
        <button type="submit" aria-label="{{ 'general.search.submit' | t }}">
          {% render 'icon-search', size: 20 %}
        </button>
      </form>
    </div>
  </div>
</div>

<!-- Mobile Search Modal (Fullscreen) -->
<div class="mobile-search-modal" id="mobile-search-modal">
  <div class="mobile-search-modal__header">
    <button class="mobile-search-modal__close" id="mobile-search-close" aria-label="Cerrar búsqueda">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  </div>

  <div class="mobile-search-modal__content">
    <form action="/search" method="get" id="mobile-search-form">
      <div class="mobile-search-modal__input-wrapper">
        <svg class="mobile-search-modal__icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="11" cy="11" r="8"></circle>
          <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
        </svg>
        <input
          type="text"
          name="q"
          placeholder="Buscar camisetas..."
          autocomplete="off"
          id="mobile-search-input"
          aria-label="Buscar productos"
        >
        <button type="button" class="mobile-search-modal__clear" id="mobile-search-clear" style="display: none;">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="15" y1="9" x2="9" y2="15"></line>
            <line x1="9" y1="9" x2="15" y2="15"></line>
          </svg>
        </button>
      </div>
    </form>

    <!-- Results -->
    <div class="mobile-search-modal__results" id="mobile-search-results">
      <div class="mobile-search-modal__loading" id="mobile-search-loading" style="display: none;">
        <div class="search-spinner"></div>
        <span>Buscando...</span>
      </div>

      <div class="mobile-search-modal__products" id="mobile-search-products">
        <!-- Products will be inserted here -->
      </div>

      <div class="mobile-search-modal__empty" id="mobile-search-empty" style="display: none;">
        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
          <circle cx="11" cy="11" r="8"></circle>
          <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
        </svg>
        <p>No se encontraron productos</p>
        <span>Intenta con otro término de búsqueda</span>
      </div>

      <div class="mobile-search-modal__view-all" id="mobile-search-view-all" style="display: none;">
        <a href="#" id="mobile-search-view-all-link" class="mobile-search-modal__view-all-btn">
          Ver todos los resultados
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="5" y1="12" x2="19" y2="12"></line>
            <polyline points="12 5 19 12 12 19"></polyline>
          </svg>
        </a>
      </div>
    </div>
  </div>
</div>

<style>
/* Live Search Dropdown Styles */
.header-search {
  position: relative;
}

.search-results-dropdown {
  position: absolute;
  top: calc(100% + 8px);
  left: 0;
  right: 0;
  background: #1a1a1a;
  border: 2px solid rgba(218, 241, 13, 0.2);
  border-radius: 12px;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);
  max-height: 480px;
  overflow-y: auto;
  z-index: 1000;
  display: none;
}

.search-results-dropdown.active {
  display: block;
  animation: slideDown 0.2s ease-out;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.search-results-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  padding: 32px;
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.875rem;
}

.search-spinner {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(218, 241, 13, 0.2);
  border-top-color: #DAF10D;
  border-radius: 50%;
  animation: spin 0.6s linear infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.search-results-content {
  padding: 8px;
}

.search-result-item {
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 12px;
  border-radius: 8px;
  text-decoration: none;
  transition: all 0.2s ease;
  cursor: pointer;
}

.search-result-item:hover {
  background: rgba(218, 241, 13, 0.08);
}

.search-result-image {
  width: 64px;
  height: 64px;
  border-radius: 8px;
  object-fit: cover;
  flex-shrink: 0;
  background: rgba(255, 255, 255, 0.05);
}

.search-result-image-placeholder {
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.08);
  position: relative;
}

.search-result-image-placeholder::before {
  content: '';
  width: 32px;
  height: 32px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.3)' stroke-width='2'%3E%3Crect x='3' y='3' width='18' height='18' rx='2'/%3E%3Ccircle cx='8.5' cy='8.5' r='1.5'/%3E%3Cpath d='M21 15l-5-5L5 21'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

.search-result-info {
  flex: 1;
  min-width: 0;
}

.search-result-title {
  font-size: 0.875rem;
  font-weight: 600;
  color: #FFFFFF;
  margin-bottom: 4px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.search-result-price {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 0.8125rem;
}

.search-result-price-sale {
  color: #DAF10D;
  font-weight: 700;
}

.search-result-price-regular {
  color: rgba(255, 255, 255, 0.4);
  text-decoration: line-through;
  font-size: 0.75rem;
}

.search-results-empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 48px 24px;
  text-align: center;
}

.search-results-empty svg {
  color: rgba(255, 255, 255, 0.2);
  margin-bottom: 16px;
}

.search-results-empty p {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.875rem;
}

.search-results-footer {
  padding: 12px;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.search-view-all {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 10px 16px;
  background: rgba(218, 241, 13, 0.1);
  border: 1px solid rgba(218, 241, 13, 0.2);
  border-radius: 8px;
  color: #DAF10D;
  font-size: 0.875rem;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.2s ease;
}

.search-view-all:hover {
  background: rgba(218, 241, 13, 0.15);
  border-color: rgba(218, 241, 13, 0.4);
}

/* Mobile Menu Specific Styles */
.mobile-menu-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-4);
  border-bottom: 1px solid var(--color-yellow-20);
}

.mobile-menu-title {
  color: var(--color-brand-yellow);
  font-weight: var(--font-weight-black);
  font-size: var(--font-size-lg);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wider);
}

.mobile-menu-close {
  padding: var(--spacing-2);
  color: var(--color-brand-white);
  transition: color var(--transition-base);
}

.mobile-menu-close:hover {
  color: var(--color-brand-yellow);
}

.mobile-menu-content {
  display: flex;
  flex-direction: column;
  height: calc(100% - 72px);
}

.mobile-menu-list {
  flex: 1;
  padding: var(--spacing-6) var(--spacing-4);
  overflow-y: auto;
}

.mobile-menu-list > li {
  margin-bottom: var(--spacing-2);
}

.mobile-menu-list > li > a {
  display: flex;
  align-items: center;
  padding: var(--spacing-3) var(--spacing-4);
  color: var(--color-brand-white);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-bold);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wide);
  transition: all var(--transition-base);
  border-radius: var(--radius-lg);
}

.mobile-menu-list > li > a:hover {
  color: var(--color-brand-yellow);
  background: var(--color-yellow-5);
}

.mobile-menu-dropdown-toggle {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: var(--spacing-3) var(--spacing-4);
  color: var(--color-brand-white);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-bold);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wide);
  transition: all var(--transition-base);
  border-radius: var(--radius-lg);
}

.mobile-menu-dropdown-toggle:hover {
  color: var(--color-brand-yellow);
  background: var(--color-yellow-5);
}

.mobile-menu-dropdown-toggle svg {
  transition: transform var(--transition-base);
}

.mobile-menu-dropdown-toggle.active svg {
  transform: rotate(180deg);
}

.mobile-menu-submenu {
  display: none;
  margin-left: var(--spacing-4);
  margin-top: var(--spacing-2);
}

.mobile-menu-submenu.active {
  display: block;
}

.mobile-menu-submenu li {
  margin-bottom: var(--spacing-1);
}

.mobile-menu-submenu a {
  display: block;
  padding: var(--spacing-2) var(--spacing-4);
  color: var(--color-white-80);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  transition: all var(--transition-base);
  border-radius: var(--radius-lg);
}

.mobile-menu-submenu a:hover {
  color: var(--color-brand-yellow);
  background: var(--color-yellow-5);
}

.mobile-menu-search {
  padding: var(--spacing-4);
  border-top: 1px solid var(--color-white-20);
}

.mobile-menu-search form {
  position: relative;
}

.mobile-menu-search input {
  width: 100%;
  padding: var(--spacing-3) var(--spacing-4);
  padding-right: 48px;
  background: var(--color-white-10);
  border: 2px solid var(--color-white-20);
  border-radius: var(--radius-lg);
  color: var(--color-brand-white);
  font-size: var(--font-size-sm);
}

.mobile-menu-search input::placeholder {
  color: var(--color-white-40);
}

.mobile-menu-search input:focus {
  border-color: var(--color-brand-yellow);
  outline: none;
}

.mobile-menu-search button {
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  padding: 0 var(--spacing-4);
  background: var(--color-brand-yellow);
  color: var(--color-brand-black);
  border-radius: 0 var(--radius-lg) var(--radius-lg) 0;
}

/* Mobile Search Toggle - Only visible on mobile */
.mobile-search-toggle {
  display: flex;
}

@media (min-width: 1024px) {
  .mobile-search-toggle {
    display: none;
  }
}

/* Mobile Search Modal - Fullscreen on mobile */
.mobile-search-modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #000000;
  z-index: 10000;
  display: none;
  flex-direction: column;
  animation: slideInUp 0.3s cubic-bezier(0.16, 1, 0.3, 1);
}

.mobile-search-modal.active {
  display: flex;
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.mobile-search-modal__header {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding: 1rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.mobile-search-modal__close {
  padding: 0.5rem;
  color: #fff;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  transition: all 0.3s ease;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.mobile-search-modal__close:hover {
  background: rgba(218, 241, 13, 0.2);
  border-color: #DAF10D;
  color: #DAF10D;
}

.mobile-search-modal__content {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  padding: 0 1rem;
}

.mobile-search-modal__input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  background: rgba(255, 255, 255, 0.08);
  border: 2px solid rgba(255, 255, 255, 0.15);
  border-radius: 1rem;
  padding: 0 1rem;
  margin-bottom: 1.5rem;
  transition: all 0.3s ease;
}

.mobile-search-modal__input-wrapper:focus-within {
  background: rgba(255, 255, 255, 0.1);
  border-color: #DAF10D;
  box-shadow: 0 0 0 3px rgba(218, 241, 13, 0.1);
}

.mobile-search-modal__icon {
  color: rgba(255, 255, 255, 0.4);
  flex-shrink: 0;
  margin-right: 0.75rem;
}

.mobile-search-modal__input-wrapper input {
  flex: 1;
  background: transparent;
  border: none;
  color: #fff;
  font-size: 1.0625rem;
  padding: 1rem 0;
  outline: none;
}

.mobile-search-modal__input-wrapper input::placeholder {
  color: rgba(255, 255, 255, 0.4);
}

.mobile-search-modal__clear {
  padding: 0.5rem;
  color: rgba(255, 255, 255, 0.5);
  transition: color 0.2s ease;
  flex-shrink: 0;
}

.mobile-search-modal__clear:hover {
  color: #DAF10D;
}

.mobile-search-modal__results {
  flex: 1;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  padding-bottom: 2rem;
}

.mobile-search-modal__loading {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  padding: 48px 24px;
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.9375rem;
}

.mobile-search-modal__products {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.mobile-search-product {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.875rem;
  background: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 1rem;
  text-decoration: none;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-tap-highlight-color: transparent;
}

.mobile-search-product:active {
  transform: scale(0.98);
  background: rgba(218, 241, 13, 0.08);
  border-color: rgba(218, 241, 13, 0.2);
}

.mobile-search-product__image {
  width: 72px;
  height: 72px;
  border-radius: 0.75rem;
  object-fit: cover;
  flex-shrink: 0;
  background: rgba(255, 255, 255, 0.05);
}

.mobile-search-product__image-placeholder {
  width: 72px;
  height: 72px;
  border-radius: 0.75rem;
  background: rgba(255, 255, 255, 0.08);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.mobile-search-product__image-placeholder::before {
  content: '';
  width: 36px;
  height: 36px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.3)' stroke-width='2'%3E%3Crect x='3' y='3' width='18' height='18' rx='2'/%3E%3Ccircle cx='8.5' cy='8.5' r='1.5'/%3E%3Cpath d='M21 15l-5-5L5 21'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

.mobile-search-product__info {
  flex: 1;
  min-width: 0;
}

.mobile-search-product__title {
  font-size: 0.9375rem;
  font-weight: 600;
  color: #FFFFFF;
  margin-bottom: 0.375rem;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  line-height: 1.3;
}

.mobile-search-product__price {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
}

.mobile-search-product__price-sale {
  color: #DAF10D;
  font-weight: 700;
}

.mobile-search-product__price-regular {
  color: rgba(255, 255, 255, 0.4);
  text-decoration: line-through;
  font-size: 0.8125rem;
}

.mobile-search-modal__empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 64px 24px;
  text-align: center;
}

.mobile-search-modal__empty svg {
  color: rgba(255, 255, 255, 0.15);
  margin-bottom: 1.5rem;
}

.mobile-search-modal__empty p {
  color: rgba(255, 255, 255, 0.8);
  font-size: 1.0625rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.mobile-search-modal__empty span {
  color: rgba(255, 255, 255, 0.5);
  font-size: 0.875rem;
}

.mobile-search-modal__view-all {
  padding: 1rem 0;
  margin-top: 1rem;
}

.mobile-search-modal__view-all-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  width: 100%;
  padding: 1rem;
  background: rgba(218, 241, 13, 0.1);
  border: 2px solid rgba(218, 241, 13, 0.25);
  border-radius: 1rem;
  color: #DAF10D;
  font-size: 0.9375rem;
  font-weight: 700;
  text-decoration: none;
  transition: all 0.3s ease;
  -webkit-tap-highlight-color: transparent;
}

.mobile-search-modal__view-all-btn:active {
  transform: scale(0.97);
  background: rgba(218, 241, 13, 0.15);
  border-color: rgba(218, 241, 13, 0.4);
}

/* Scrollbar for mobile search results */
.mobile-search-modal__results::-webkit-scrollbar {
  width: 4px;
}

.mobile-search-modal__results::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
}

.mobile-search-modal__results::-webkit-scrollbar-thumb {
  background: rgba(218, 241, 13, 0.3);
  border-radius: 2px;
}

/* Desktop Dropdown Navigation */
.header-nav-item-dropdown {
  position: relative;
}

.header-nav-dropdown-toggle {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
}

.header-nav-dropdown {
  position: absolute;
  top: 100%;
  left: 0;
  margin-top: var(--spacing-2);
  width: 224px;
  background: #171717;
  border: 2px solid var(--color-yellow-20);
  border-radius: var(--radius-lg);
  padding: var(--spacing-2);
  box-shadow: 0 10px 40px rgba(218, 241, 13, 0.1);
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: all var(--transition-base);
  z-index: var(--z-dropdown);
}

.header-nav-item-dropdown:hover .header-nav-dropdown {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.header-nav-dropdown a {
  display: block;
  padding: var(--spacing-3) var(--spacing-4);
  color: var(--color-brand-white);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  border-radius: var(--radius-md);
  transition: all var(--transition-base);
}

.header-nav-dropdown a:hover {
  background: var(--color-yellow-10);
  color: var(--color-brand-yellow);
}
</style>

<script>
(function() {
  const searchInput = document.getElementById('header-search-input');
  const searchForm = document.getElementById('header-search-form');
  const searchDropdown = document.getElementById('search-results-dropdown');
  const searchContent = document.getElementById('search-results-content');
  const searchLoading = document.getElementById('search-loading');
  const searchEmpty = document.getElementById('search-empty');
  const searchFooter = document.getElementById('search-footer');
  const searchViewAll = document.getElementById('search-view-all');

  let debounceTimer;
  let currentQuery = '';

  if (!searchInput || !searchDropdown) return;

  // Debounce function
  function debounce(func, delay) {
    return function(...args) {
      clearTimeout(debounceTimer);
      debounceTimer = setTimeout(() => func.apply(this, args), delay);
    };
  }

  // Format price with Shopify money format
  function formatMoney(cents) {
    // Ensure cents is a number
    const amount = parseFloat(cents);
    if (isNaN(amount)) return '$0 ARS';

    // Format with thousands separator
    const formatted = amount.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, '.');
    return `$${formatted}`;
  }

  // Fetch search results using Predictive Search API
  async function fetchSearchResults(query) {
    try {
      const response = await fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=6`);
      if (!response.ok) throw new Error('Search failed');
      const data = await response.json();
      return data.resources.results.products || [];
    } catch (error) {
      console.error('Search error:', error);
      return [];
    }
  }

  // Render search results
  function renderResults(products, query) {
    searchLoading.style.display = 'none';

    if (products.length === 0) {
      searchContent.innerHTML = '';
      searchEmpty.style.display = 'flex';
      searchFooter.style.display = 'none';
      return;
    }

    searchEmpty.style.display = 'none';
    searchFooter.style.display = 'block';

    // Update "View all" link
    searchViewAll.href = `/search?q=${encodeURIComponent(query)}`;

    // Render product items
    searchContent.innerHTML = products.map(product => {
      const price = product.price;
      const comparePrice = Math.round(price * 1.5);

      // Get image URL - Predictive Search API returns image in different format
      let imageUrl = '';
      if (product.image) {
        imageUrl = product.image;
      } else if (product.featured_image) {
        imageUrl = product.featured_image;
      }

      // Add Shopify CDN size parameter if image exists
      if (imageUrl && !imageUrl.includes('_')) {
        imageUrl = imageUrl.replace('.jpg', '_200x200.jpg').replace('.png', '_200x200.png').replace('.webp', '_200x200.webp');
      }

      return `
        <a href="${product.url}" class="search-result-item" role="option">
          ${imageUrl ? `<img src="${imageUrl}" alt="${product.title}" class="search-result-image" loading="lazy">` : `<div class="search-result-image search-result-image-placeholder"></div>`}
          <div class="search-result-info">
            <div class="search-result-title">${product.title}</div>
            <div class="search-result-price">
              <span class="search-result-price-sale">${formatMoney(price)}</span>
              <span class="search-result-price-regular">${formatMoney(comparePrice)}</span>
            </div>
          </div>
        </a>
      `;
    }).join('');
  }

  // Show dropdown
  function showDropdown() {
    searchDropdown.classList.add('active');
    searchInput.setAttribute('aria-expanded', 'true');
  }

  // Hide dropdown
  function hideDropdown() {
    searchDropdown.classList.remove('active');
    searchInput.setAttribute('aria-expanded', 'false');
  }

  // Perform search
  async function performSearch(query) {
    if (query.length < 2) {
      hideDropdown();
      return;
    }

    currentQuery = query;
    showDropdown();

    // Show loading state
    searchLoading.style.display = 'flex';
    searchEmpty.style.display = 'none';
    searchFooter.style.display = 'none';
    searchContent.innerHTML = '';

    // Fetch and render results
    const products = await fetchSearchResults(query);

    // Only update if this is still the current query
    if (query === currentQuery) {
      renderResults(products, query);
    }
  }

  // Event listeners
  searchInput.addEventListener('input', debounce((e) => {
    const query = e.target.value.trim();
    performSearch(query);
  }, 300));

  searchInput.addEventListener('focus', () => {
    if (searchInput.value.trim().length >= 2) {
      showDropdown();
    }
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    if (!searchDropdown.contains(e.target) && !searchInput.contains(e.target)) {
      hideDropdown();
    }
  });

  // Prevent form submission if there are results (let user click on them)
  searchForm.addEventListener('submit', (e) => {
    const query = searchInput.value.trim();
    if (query.length < 2) {
      e.preventDefault();
      searchInput.focus();
    }
  });

  // Close dropdown on Escape key
  searchInput.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      hideDropdown();
      searchInput.blur();
    }
  });
})();

// Mobile Search Modal JavaScript
(function() {
  const mobileSearchToggle = document.getElementById('mobile-search-toggle');
  const mobileSearchModal = document.getElementById('mobile-search-modal');
  const mobileSearchClose = document.getElementById('mobile-search-close');
  const mobileSearchInput = document.getElementById('mobile-search-input');
  const mobileSearchClear = document.getElementById('mobile-search-clear');
  const mobileSearchLoading = document.getElementById('mobile-search-loading');
  const mobileSearchProducts = document.getElementById('mobile-search-products');
  const mobileSearchEmpty = document.getElementById('mobile-search-empty');
  const mobileSearchViewAll = document.getElementById('mobile-search-view-all');
  const mobileSearchViewAllLink = document.getElementById('mobile-search-view-all-link');

  let mobileDebounceTimer;
  let mobileCurrentQuery = '';

  if (!mobileSearchToggle || !mobileSearchModal) return;

  // Format price with ARS currency
  function formatMoney(cents) {
    const amount = parseFloat(cents);
    if (isNaN(amount)) return '$0 ARS';
    const formatted = amount.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, '.');
    return `$${formatted}`;
  }

  // Fetch search results
  async function fetchMobileSearchResults(query) {
    try {
      const response = await fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=8`);
      if (!response.ok) throw new Error('Search failed');
      const data = await response.json();
      return data.resources.results.products || [];
    } catch (error) {
      console.error('Mobile search error:', error);
      return [];
    }
  }

  // Render mobile search results
  function renderMobileResults(products, query) {
    mobileSearchLoading.style.display = 'none';

    if (products.length === 0) {
      mobileSearchProducts.innerHTML = '';
      mobileSearchEmpty.style.display = 'flex';
      mobileSearchViewAll.style.display = 'none';
      return;
    }

    mobileSearchEmpty.style.display = 'none';
    mobileSearchViewAll.style.display = 'block';
    mobileSearchViewAllLink.href = `/search?q=${encodeURIComponent(query)}`;

    // Render products
    mobileSearchProducts.innerHTML = products.map(product => {
      const price = product.price;
      const comparePrice = Math.round(price * 1.5);

      let imageUrl = '';
      if (product.image) {
        imageUrl = product.image;
      } else if (product.featured_image) {
        imageUrl = product.featured_image;
      }

      if (imageUrl && !imageUrl.includes('_')) {
        imageUrl = imageUrl.replace('.jpg', '_200x200.jpg').replace('.png', '_200x200.png').replace('.webp', '_200x200.webp');
      }

      return `
        <a href="${product.url}" class="mobile-search-product">
          ${imageUrl ? `<img src="${imageUrl}" alt="${product.title}" class="mobile-search-product__image" loading="lazy">` : `<div class="mobile-search-product__image-placeholder"></div>`}
          <div class="mobile-search-product__info">
            <div class="mobile-search-product__title">${product.title}</div>
            <div class="mobile-search-product__price">
              <span class="mobile-search-product__price-sale">${formatMoney(price)}</span>
              <span class="mobile-search-product__price-regular">${formatMoney(comparePrice)}</span>
            </div>
          </div>
        </a>
      `;
    }).join('');
  }

  // Perform mobile search
  async function performMobileSearch(query) {
    if (query.length < 2) {
      mobileSearchProducts.innerHTML = '';
      mobileSearchEmpty.style.display = 'none';
      mobileSearchViewAll.style.display = 'none';
      return;
    }

    mobileCurrentQuery = query;

    // Show loading
    mobileSearchLoading.style.display = 'flex';
    mobileSearchEmpty.style.display = 'none';
    mobileSearchViewAll.style.display = 'none';
    mobileSearchProducts.innerHTML = '';

    // Fetch results
    const products = await fetchMobileSearchResults(query);

    // Update only if still current query
    if (query === mobileCurrentQuery) {
      renderMobileResults(products, query);
    }
  }

  // Debounced search
  function debouncedMobileSearch(query) {
    clearTimeout(mobileDebounceTimer);
    mobileDebounceTimer = setTimeout(() => {
      performMobileSearch(query);
    }, 300);
  }

  // Open modal
  function openMobileSearch() {
    mobileSearchModal.classList.add('active');
    document.body.style.overflow = 'hidden';

    // Focus input after animation
    setTimeout(() => {
      mobileSearchInput.focus();
    }, 100);
  }

  // Close modal
  function closeMobileSearch() {
    mobileSearchModal.classList.remove('active');
    document.body.style.overflow = '';
    mobileSearchInput.value = '';
    mobileSearchClear.style.display = 'none';
    mobileSearchProducts.innerHTML = '';
    mobileSearchEmpty.style.display = 'none';
    mobileSearchViewAll.style.display = 'none';
  }

  // Event listeners
  mobileSearchToggle.addEventListener('click', openMobileSearch);
  mobileSearchClose.addEventListener('click', closeMobileSearch);

  mobileSearchInput.addEventListener('input', (e) => {
    const value = e.target.value.trim();

    // Show/hide clear button
    mobileSearchClear.style.display = value.length > 0 ? 'block' : 'none';

    // Perform search
    debouncedMobileSearch(value);
  });

  mobileSearchClear.addEventListener('click', () => {
    mobileSearchInput.value = '';
    mobileSearchClear.style.display = 'none';
    mobileSearchProducts.innerHTML = '';
    mobileSearchEmpty.style.display = 'none';
    mobileSearchViewAll.style.display = 'none';
    mobileSearchInput.focus();
  });

  // Close on ESC key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && mobileSearchModal.classList.contains('active')) {
      closeMobileSearch();
    }
  });
})();
</script>

{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "text",
      "id": "promotional_text",
      "label": "Promotional Banner Text",
      "default": "ENVÍO GRATIS A TODA ARGENTINA"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Main Menu",
      "default": "main-menu"
    }
  ]
}
{% endschema %}
