{%- assign images = product.images -%}
{%- assign first_image = product.featured_image | default: product.images.first -%}

<div class="product-gallery">
  {%- if images.size > 0 -%}
    {%- comment %} Main Image Container {%- endcomment -%}
    <div class="product-gallery__main">
      <div class="product-gallery__main-image" data-main-image>
        <img
          src="{{ first_image | image_url: width: 800 }}"
          alt="{{ product.title }}"
          data-current-image
          loading="eager"
        >

        {%- if images.size > 1 -%}
          {%- comment %} Navigation Arrows {%- endcomment -%}
          <button class="product-gallery__arrow product-gallery__arrow--prev" data-prev-image aria-label="Imagen anterior">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="15 18 9 12 15 6"></polyline>
            </svg>
          </button>
          <button class="product-gallery__arrow product-gallery__arrow--next" data-next-image aria-label="Imagen siguiente">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="9 18 15 12 9 6"></polyline>
            </svg>
          </button>

          {%- comment %} Image Counter {%- endcomment -%}
          <div class="product-gallery__counter">
            <span data-current-index>1</span> / <span>{{ images.size }}</span>
          </div>
        {%- endif -%}

        {%- comment %} Zoom Hint {%- endcomment -%}
        <div class="product-gallery__zoom-hint">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="11" cy="11" r="8"></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            <line x1="11" y1="8" x2="11" y2="14"></line>
            <line x1="8" y1="11" x2="14" y2="11"></line>
          </svg>
        </div>
      </div>
    </div>

    {%- if images.size > 1 -%}
      {%- comment %} Thumbnails {%- endcomment -%}
      <div class="product-gallery__thumbnails">
        <div class="product-gallery__thumbnails-scroll">
          {%- for image in images -%}
            <button
              class="product-gallery__thumbnail {% if forloop.first %}active{% endif %}"
              data-thumbnail="{{ forloop.index0 }}"
              data-image-url="{{ image | image_url: width: 800 }}"
            >
              <img
                src="{{ image | image_url: width: 120 }}"
                alt="{{ product.title }} - Imagen {{ forloop.index }}"
                loading="lazy"
              >
            </button>
          {%- endfor -%}
        </div>
      </div>
    {%- endif -%}

  {%- else -%}
    <div class="product-gallery__empty">
      <p>Sin im√°genes disponibles</p>
    </div>
  {%- endif -%}
</div>

<style>
  .product-gallery {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  /* Main Image Container */
  .product-gallery__main {
    width: 100%;
  }

  .product-gallery__main-image {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .product-gallery__main-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: transform 0.3s ease;
  }

  .product-gallery__main-image:hover img {
    transform: scale(1.05);
  }

  /* Navigation Arrows */
  .product-gallery__arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    background: rgba(0, 0, 0, 0.6);
    color: #FFFFFF;
    border: none;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0;
    z-index: 10;
  }

  .product-gallery__main-image:hover .product-gallery__arrow {
    opacity: 1;
  }

  .product-gallery__arrow:hover {
    background: rgba(0, 0, 0, 0.8);
    transform: translateY(-50%) scale(1.1);
  }

  .product-gallery__arrow svg {
    width: 24px;
    height: 24px;
  }

  .product-gallery__arrow--prev {
    left: 16px;
  }

  .product-gallery__arrow--next {
    right: 16px;
  }

  /* Image Counter */
  .product-gallery__counter {
    position: absolute;
    bottom: 16px;
    right: 16px;
    background: rgba(0, 0, 0, 0.6);
    color: #FFFFFF;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 0.875rem;
    z-index: 10;
  }

  /* Zoom Hint */
  .product-gallery__zoom-hint {
    position: absolute;
    top: 16px;
    right: 16px;
    background: rgba(0, 0, 0, 0.6);
    color: #FFFFFF;
    padding: 8px;
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 10;
  }

  .product-gallery__main-image:hover .product-gallery__zoom-hint {
    opacity: 1;
  }

  .product-gallery__zoom-hint svg {
    width: 20px;
    height: 20px;
    display: block;
  }

  /* Thumbnails */
  .product-gallery__thumbnails {
    width: 100%;
    overflow: hidden;
    margin-left: -16px;
    margin-right: -16px;
    padding-left: 16px;
    padding-right: 16px;
  }

  @media screen and (min-width: 768px) {
    .product-gallery__thumbnails {
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      padding-right: 0;
    }
  }

  .product-gallery__thumbnails-scroll {
    display: flex;
    gap: 8px;
    overflow-x: auto;
    padding-bottom: 8px;
    scrollbar-width: thin;
    scrollbar-color: rgba(218, 241, 13, 0.3) rgba(255, 255, 255, 0.1);
  }

  .product-gallery__thumbnails-scroll::-webkit-scrollbar {
    height: 6px;
  }

  .product-gallery__thumbnails-scroll::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
  }

  .product-gallery__thumbnails-scroll::-webkit-scrollbar-thumb {
    background: rgba(218, 241, 13, 0.3);
    border-radius: 3px;
  }

  .product-gallery__thumbnails-scroll::-webkit-scrollbar-thumb:hover {
    background: rgba(218, 241, 13, 0.5);
  }

  @media (min-width: 768px) {
    .product-gallery__thumbnails-scroll {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      overflow-x: visible;
    }
  }

  .product-gallery__thumbnail {
    position: relative;
    aspect-ratio: 1;
    width: 80px;
    height: 80px;
    background: rgba(255, 255, 255, 0.05);
    border: 2px solid transparent;
    border-radius: 12px;
    overflow: hidden;
    cursor: pointer;
    transition: all 0.2s ease;
    flex-shrink: 0;
    padding: 0;
    opacity: 0.6;
  }

  @media (min-width: 768px) {
    .product-gallery__thumbnail {
      width: 100%;
      height: auto;
    }
  }

  .product-gallery__thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .product-gallery__thumbnail:hover {
    border-color: rgba(255, 255, 255, 0.3);
    opacity: 1;
  }

  .product-gallery__thumbnail.active {
    border-color: #DAF10D;
    transform: scale(1.05);
    opacity: 1;
    box-shadow: 0 0 0 1px #DAF10D;
  }

  /* Empty State */
  .product-gallery__empty {
    width: 100%;
    aspect-ratio: 1;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .product-gallery__empty p {
    color: rgba(255, 255, 255, 0.4);
    font-size: 1rem;
  }
</style>

<script>
(function() {
  const gallery = document.querySelector('.product-gallery');
  if (!gallery) return;

  const mainImage = gallery.querySelector('[data-current-image]');
  const currentIndexDisplay = gallery.querySelector('[data-current-index]');
  const thumbnails = gallery.querySelectorAll('[data-thumbnail]');
  const prevButton = gallery.querySelector('[data-prev-image]');
  const nextButton = gallery.querySelector('[data-next-image]');

  if (!mainImage || thumbnails.length === 0) return;

  let currentIndex = 0;
  const totalImages = thumbnails.length;

  function updateImage(index) {
    // Update current index
    currentIndex = index;

    // Update main image
    const thumbnail = thumbnails[index];
    const imageUrl = thumbnail.dataset.imageUrl;
    mainImage.src = imageUrl;

    // Update counter
    if (currentIndexDisplay) {
      currentIndexDisplay.textContent = index + 1;
    }

    // Update active thumbnail
    thumbnails.forEach((thumb, i) => {
      if (i === index) {
        thumb.classList.add('active');
      } else {
        thumb.classList.remove('active');
      }
    });

    // Scroll thumbnail into view (mobile)
    thumbnail.scrollIntoView({
      behavior: 'smooth',
      block: 'nearest',
      inline: 'center'
    });
  }

  // Thumbnail click handlers
  thumbnails.forEach((thumbnail, index) => {
    thumbnail.addEventListener('click', () => {
      updateImage(index);
    });
  });

  // Previous button
  if (prevButton) {
    prevButton.addEventListener('click', () => {
      const newIndex = currentIndex === 0 ? totalImages - 1 : currentIndex - 1;
      updateImage(newIndex);
    });
  }

  // Next button
  if (nextButton) {
    nextButton.addEventListener('click', () => {
      const newIndex = currentIndex === totalImages - 1 ? 0 : currentIndex + 1;
      updateImage(newIndex);
    });
  }

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft' && prevButton) {
      prevButton.click();
    } else if (e.key === 'ArrowRight' && nextButton) {
      nextButton.click();
    }
  });
})();
</script>
